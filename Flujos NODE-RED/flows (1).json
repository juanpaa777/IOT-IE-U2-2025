[
    {
        "id": "f9b6d46158a48420",
        "type": "tab",
        "label": "BD_POSTGRES_CRUD",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9df9c1933438c01f",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/sensors/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "0183e8711de56a85"
            ]
        ]
    },
    {
        "id": "c5da81ece92cd9b4",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/sensors/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "a49ef639e0c5db91"
            ]
        ]
    },
    {
        "id": "ac55cf4962fb83ff",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/sensors/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "7cba9cc9885d8f12"
            ]
        ]
    },
    {
        "id": "a57c080314d509ca",
        "type": "template",
        "z": "f9b6d46158a48420",
        "name": "Web Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n    <title>Users</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script type=\"text/javascript\">\n    $(function () {\n        console.log(\"Users Data Crud\");\n\n        var db = {{#payload}}{{{.}}}{{/payload}};\n\n        // Cargar usuarios al iniciar la p√°gina\n        var userOptions = [];\n\n        $.get(\"/sensors/get-users\", function(users) {\n            // Mapear los usuarios para obtener un array de objetos {value, text}\n            var userOptions = users.map(function(user) {\n                return { id: user.id, name: user.username };\n            });\n            console.log(userOptions);\n            // Agregar los usuarios al combo\n            $(\"#jsgrid\").jsGrid(\"fieldOption\", \"user_id\", \"items\", userOptions);\n        });\n\n    \n        $(\"#jsgrid\").jsGrid({\n            width: \"100%\",\n            inserting: true,\n            editing: true,\n            sorting: true,\n            paging: true,\n\n            data: db,\n\n            fields: [\n                { title:\"ID\", name: \"id\", type: \"text\", width: 50 },\n                { title:\"Sensor Type\", name: \"sensor_type\", type: \"text\", width: 50 },\n                { title:\"Location\", name: \"location\", type: \"text\", width: 50 },\n                { title:\"Installation Date\", name: \"installation_date\", type:\"text\", width: 25},\n                { title:\"User\", name: \"user_id\", type: \"select\", items: userOptions,  valueField: \"id\", textField: \"name\", width: 50},\n                { type: \"control\" }\n            ],\n\n            controller: {\n                insertItem: function(item) {\n                    return $.ajax({\n                        type: \"POST\",\n                        url: \"/sensors/insert\",\n                        data: item\n                    });\n                },\n                updateItem: function(item) {\n                   return $.ajax({\n                        type: \"PUT\",\n                        url: \"/sensors/update\",\n                        data: item\n                    });\n                },\n                deleteItem: function(item) {\n                    return $.ajax({\n                        type: \"DELETE\",\n                        url: \"/sensors/delete\",\n                        data: item\n                    });\n                }\n            }   \n        });\n    \n    \n    \n    \n    \n});\n</script>\n</head>\n<body class=\"container\">\n     <section class=\"row\">\n        \n        <div class=\"col-md-6\"></div>\n        <div class=\"col-md-6\" id=\"jsgrid\">\n        </div>\n    </section>\n</body>\n</html>\n",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "d8913a06857bb88b"
            ]
        ]
    },
    {
        "id": "88be20b7535b096b",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/sensors/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "a3a6f8622ec66d71"
            ]
        ]
    },
    {
        "id": "d8913a06857bb88b",
        "type": "http response",
        "z": "f9b6d46158a48420",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "8a3d6bb64b0411f4",
        "type": "json",
        "z": "f9b6d46158a48420",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "a57c080314d509ca"
            ]
        ]
    },
    {
        "id": "a3a6f8622ec66d71",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "SELECT sensors",
        "query": "SELECT sensors.*, users.id AS user_id, users.username \nFROM sensors \nLEFT JOIN users ON sensors.user_id = users.id;\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "8a3d6bb64b0411f4"
            ]
        ]
    },
    {
        "id": "0183e8711de56a85",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "UPDATE sensors",
        "query": "UPDATE sensors SET sensor_type = '{{{msg.payload.sensor_type}}}',\n                    location =  '{{{msg.payload.location}}}',\n                    user_id =  '{{{msg.payload.user_id}}}' \n            WHERE id = {{{msg.payload.id}}};",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "dbd38d61b1c83325"
            ]
        ]
    },
    {
        "id": "a49ef639e0c5db91",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensors (sensor_type, location, user_id) VALUES ('{{{msg.payload.sensor_type}}}','{{{msg.payload.location}}}', {{{msg.payload.user_id}}});\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 340,
        "y": 320,
        "wires": [
            [
                "46cd07b87fe5c546"
            ]
        ]
    },
    {
        "id": "7cba9cc9885d8f12",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "DELETE sensors",
        "query": "DELETE FROM sensors WHERE id = {{{msg.payload.id}}};",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "dbd38d61b1c83325"
            ]
        ]
    },
    {
        "id": "f54234d43b376953",
        "type": "function",
        "z": "f9b6d46158a48420",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    location: msg.payload[0].location,\n    installation_date: msg.payload[0].installation_date,\n    sensor_type: msg.payload[0].sensor_type,\n    user_id: msg.payload[0].user_id\n};\n\nif (item.sensor_type === \"\" || item.location === \"\" || item.installation_date === \"\" || item.id === \"\" || item.User === \"\") {\n    msg.statusCode = 400;\n    msg.payload = null;\n    return msg;\n}\n\nmsg.payload = item;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 360,
        "wires": [
            [
                "d8913a06857bb88b"
            ]
        ]
    },
    {
        "id": "46cd07b87fe5c546",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "SELECT MAX sensors",
        "query": "SELECT sensors.*, users.username\nFROM sensors\nJOIN users ON sensors.user_id = users.id\nWHERE sensors.id = (SELECT MAX(id) FROM sensors);",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "f54234d43b376953"
            ]
        ]
    },
    {
        "id": "dbd38d61b1c83325",
        "type": "function",
        "z": "f9b6d46158a48420",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 280,
        "wires": [
            [
                "d8913a06857bb88b"
            ]
        ]
    },
    {
        "id": "b765aa5b8266b06f",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/sensors/get-users",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "949a044601fbd12f"
            ]
        ]
    },
    {
        "id": "949a044601fbd12f",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "SELECT users",
        "query": "SELECT * FROM users;",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "04ebdd933aacf737"
            ]
        ]
    },
    {
        "id": "04ebdd933aacf737",
        "type": "http response",
        "z": "f9b6d46158a48420",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "93b9d46682604489",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/users/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "7e0e1478f869361c"
            ]
        ]
    },
    {
        "id": "157381549d8e7bbf",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/users/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "9fb992cd343f2cb4"
            ]
        ]
    },
    {
        "id": "e94b272a2e3e0914",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/users/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "6e33e6ab3a7ca8e6"
            ]
        ]
    },
    {
        "id": "f1f37eaaaa829eb5",
        "type": "template",
        "z": "f9b6d46158a48420",
        "name": "Web Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n    <title>Users</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script type=\"text/javascript\">\n    $(function () {\n        console.log(\"Users Data Crud\");\n\n        var db = {{#payload}}{{{.}}}{{/payload}};\n\n        // Cargar usuarios al iniciar la p√°gina\n    \n        $(\"#jsgrid\").jsGrid({\n            width: \"100%\",\n            inserting: true,\n            editing: true,\n            sorting: true,\n            paging: true,\n\n            data: db,\n\n            fields: [\n                { title:\"ID\", name: \"id\", type: \"text\", width: 50 },\n                { title:\"Email\", name: \"email\", type: \"text\", width: 50 },\n                { title:\"Registration Date\", name: \"record_at\", type:\"text\", width: 25},\n                { title:\"password\", name: \"password\", type: \"password\", width: 50 },\n                { type: \"control\" }\n            ],\n\n            controller: {\n                insertItem: function(item) {\n                    return $.ajax({\n                        type: \"POST\",\n                        url: \"/users/insert\",\n                        data: item\n                    });\n                },\n                updateItem: function(item) {\n                   return $.ajax({\n                        type: \"PUT\",\n                        url: \"/users/update\",\n                        data: item\n                    });\n                },\n                deleteItem: function(item) {\n                    return $.ajax({\n                        type: \"DELETE\",\n                        url: \"/users/delete\",\n                        data: item\n                    });\n                }\n            }   \n        });\n    \n    \n    \n    \n    \n});\n</script>\n</head>\n<body class=\"container\">\n     <section class=\"row\">\n        \n        <div class=\"col-md-6\"></div>\n        <div class=\"col-md-6\" id=\"jsgrid\">\n        </div>\n    </section>\n</body>\n</html>\n",
        "x": 760,
        "y": 480,
        "wires": [
            [
                "6ed23d9636a97339"
            ]
        ]
    },
    {
        "id": "0fe58940d1d0ab8e",
        "type": "http in",
        "z": "f9b6d46158a48420",
        "name": "",
        "url": "/users/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "144167944e609062"
            ]
        ]
    },
    {
        "id": "6ed23d9636a97339",
        "type": "http response",
        "z": "f9b6d46158a48420",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "72ddee0e49ad99a3",
        "type": "json",
        "z": "f9b6d46158a48420",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 480,
        "wires": [
            [
                "f1f37eaaaa829eb5"
            ]
        ]
    },
    {
        "id": "144167944e609062",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "SELECT users",
        "query": "SELECT * FROM users;",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 480,
        "wires": [
            [
                "72ddee0e49ad99a3"
            ]
        ]
    },
    {
        "id": "7e0e1478f869361c",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "UPDATE users",
        "query": "UPDATE users SET email = '{{{msg.payload.email}}}',\n                    password =  encriptar_contrasena('{{{msg.payload.password}}}')\n            WHERE id = {{{msg.payload.id}}};",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 540,
        "wires": [
            [
                "de282dadb1a7bfe1"
            ]
        ]
    },
    {
        "id": "9fb992cd343f2cb4",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT users",
        "query": "INSERT INTO users (email, password) VALUES ('{{{msg.payload.email}}}',encriptar_constrasena('{{{msg.payload.password}}}'));\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 600,
        "wires": [
            [
                "34d4d0c82f7301f1"
            ]
        ]
    },
    {
        "id": "6e33e6ab3a7ca8e6",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "DELETE users",
        "query": "DELETE FROM users WHERE id = {{{msg.payload.id}}};",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 660,
        "wires": [
            [
                "de282dadb1a7bfe1"
            ]
        ]
    },
    {
        "id": "b627898011020fa4",
        "type": "function",
        "z": "f9b6d46158a48420",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    username: msg.payload[0].email,\n    record_at: msg.payload[0].record_at,\n    password: msg.payload[0].password\n};\n\nif (item.password === \"\" || item.email === \"\" || item.record_at === \"\" || item.id === \"\") {\n    msg.statusCode = 400;\n    msg.payload = null;\n    return msg;\n}\n\nmsg.payload = item;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 600,
        "wires": [
            [
                "6ed23d9636a97339"
            ]
        ]
    },
    {
        "id": "34d4d0c82f7301f1",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "SELECT MAX users",
        "query": "SELECT *\nFROM users \nWHERE id = (SELECT MAX(id) FROM users);",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 580,
        "wires": [
            [
                "b627898011020fa4"
            ]
        ]
    },
    {
        "id": "de282dadb1a7bfe1",
        "type": "function",
        "z": "f9b6d46158a48420",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "6ed23d9636a97339"
            ]
        ]
    },
    {
        "id": "f9df140dbcde4e2e",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "ncm/sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "dbe5f8ec9b9fad1a"
            ]
        ]
    },
    {
        "id": "dbe5f8ec9b9fad1a",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (1,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 370,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d6e3e37edfb4df8c",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/tit",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1220,
        "y": 60,
        "wires": [
            [
                "bc65acc95d8cf45b"
            ]
        ]
    },
    {
        "id": "bc65acc95d8cf45b",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (2,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bff3e4320a3df652",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/small",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "d32ddfbe8a06b226"
            ]
        ]
    },
    {
        "id": "d32ddfbe8a06b226",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (3,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ea85cc6745440daf",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/big",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1220,
        "y": 240,
        "wires": [
            [
                "3c3c633df232be26"
            ]
        ]
    },
    {
        "id": "3c3c633df232be26",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (4,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "71bbd5ee951a6ba3",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/rgb",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "e0116e7fda3df5f2"
            ]
        ]
    },
    {
        "id": "e0116e7fda3df5f2",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (2,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8ce4bd604c98b3a8",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/vibrador",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 440,
        "wires": [
            [
                "d4aee18fd326a313"
            ]
        ]
    },
    {
        "id": "d4aee18fd326a313",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (5,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "88a47b0af2477269",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/hoyo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "4a66961496ad334f"
            ]
        ]
    },
    {
        "id": "4a66961496ad334f",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (4,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5fb74a3aa1d585a6",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/temperaturadi",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1260,
        "y": 480,
        "wires": [
            [
                "3141febdf4c88f35"
            ]
        ]
    },
    {
        "id": "3141febdf4c88f35",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (6,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5c6896bb2658ba7c",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/button",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 600,
        "wires": [
            [
                "047e39354a72ac92"
            ]
        ]
    },
    {
        "id": "047e39354a72ac92",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (3,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d51987d3321cdc13",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/temperatura",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 720,
        "wires": [
            [
                "400f0fa8acb6e635"
            ]
        ]
    },
    {
        "id": "400f0fa8acb6e635",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (1,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "e36242155c8acd1b",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/laser",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 640,
        "wires": [
            [
                "0816e57bb1b0fc9d"
            ]
        ]
    },
    {
        "id": "0816e57bb1b0fc9d",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (5,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "95dbb61a3a566132",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/led2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "91c5ea79cce44d0a"
            ]
        ]
    },
    {
        "id": "91c5ea79cce44d0a",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (4,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "718f80560613e232",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/agua",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 200,
        "wires": [
            [
                "8b1e07cbc7fd6205"
            ]
        ]
    },
    {
        "id": "8b1e07cbc7fd6205",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (8,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2a252355fd46d17d",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/inclinacion2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 820,
        "wires": [
            [
                "5e33a13bf0e0ae8a"
            ]
        ]
    },
    {
        "id": "5e33a13bf0e0ae8a",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (9,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "71261220e9911c1c",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/buzzerpasivo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1260,
        "y": 1000,
        "wires": [
            [
                "8d0e1a696bfa1461"
            ]
        ]
    },
    {
        "id": "8d0e1a696bfa1461",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (7,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "545d13e050d8a185",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/buzzeractivo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1260,
        "y": 960,
        "wires": [
            [
                "b5996dcef274065c"
            ]
        ]
    },
    {
        "id": "b5996dcef274065c",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (6,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "8a354d02bd6adb39",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/infrarrojo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 1040,
        "wires": [
            [
                "5559f46c1f2cc93a"
            ]
        ]
    },
    {
        "id": "5559f46c1f2cc93a",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (10,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "7d591a6c6121f7ba",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/iman",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 1080,
        "wires": [
            [
                "58b05a057138a3c4"
            ]
        ]
    },
    {
        "id": "58b05a057138a3c4",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (11,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "5f2213578593f746",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/mq5",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 1220,
        "wires": [
            [
                "e2f0338f832a1e23"
            ]
        ]
    },
    {
        "id": "e2f0338f832a1e23",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (12,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "8174c9341a348535",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/fotorresistencia",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1260,
        "y": 1280,
        "wires": [
            [
                "eb5a5e5b964cfb2c"
            ]
        ]
    },
    {
        "id": "eb5a5e5b964cfb2c",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (13,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "6f342e8359a4a1cf",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/temp18b20",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 1340,
        "wires": [
            [
                "816c772cec4b4c5b"
            ]
        ]
    },
    {
        "id": "816c772cec4b4c5b",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (14,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "a7397d41e2023280",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/MiniMagnetico",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1260,
        "y": 1460,
        "wires": [
            [
                "1754b1502a270325"
            ]
        ]
    },
    {
        "id": "1754b1502a270325",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (15,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "4ab74c2367e8f44b",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/LedInfrarrojo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 1500,
        "wires": [
            [
                "dd9b839b499788c2"
            ]
        ]
    },
    {
        "id": "dd9b839b499788c2",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (16,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "cd8131f5142f3ccc",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/joystick",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 1540,
        "wires": [
            [
                "cb931a66b161ccd4"
            ]
        ]
    },
    {
        "id": "cb931a66b161ccd4",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (17,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "cd3b18a099ee59a0",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/campoMagnetico",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1270,
        "y": 1580,
        "wires": [
            [
                "d795aed0e9db73e9"
            ]
        ]
    },
    {
        "id": "d795aed0e9db73e9",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (18,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "9eda531ad8c21a68",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/relevador",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 1380,
        "wires": [
            [
                "79d1c0f7f03d4f83"
            ]
        ]
    },
    {
        "id": "79d1c0f7f03d4f83",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (19,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "f95056fb8d5fa1cd",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/flama",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 1700,
        "wires": [
            [
                "7290925d00165421"
            ]
        ]
    },
    {
        "id": "7290925d00165421",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (20,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "999882540d9950f7",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/impacto",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 1740,
        "wires": [
            [
                "3f03a17717dad3b8"
            ]
        ]
    },
    {
        "id": "3f03a17717dad3b8",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (21,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "2e82a82a36bcbe51",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/led2colores3mm",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1270,
        "y": 1780,
        "wires": [
            [
                "43029cdc08d86c32"
            ]
        ]
    },
    {
        "id": "43029cdc08d86c32",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (8,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "ed93e9bda8c5020a",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/linea",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 1960,
        "wires": [
            [
                "9e82b362b4fbc092"
            ]
        ]
    },
    {
        "id": "9e82b362b4fbc092",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (23,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "c4bf2a93088ef450",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/vibracion",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 2000,
        "wires": [
            [
                "f2adb95cb2742317"
            ]
        ]
    },
    {
        "id": "f2adb95cb2742317",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (9,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "2e6131f731cf9c06",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "actuator/led7colores",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 2040,
        "wires": [
            [
                "0e29b5715cbd619f"
            ]
        ]
    },
    {
        "id": "0e29b5715cbd619f",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT actuators",
        "query": "INSERT INTO actuator_details (actuator_id, user_id, state) VALUES (10,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "8cfce4290ba4652a",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/obstaculos",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 2100,
        "wires": [
            [
                "3f78f32b1c9c0d83"
            ]
        ]
    },
    {
        "id": "3f78f32b1c9c0d83",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (24,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "73879de743dcc2c5",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/hallAnalogo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 2140,
        "wires": [
            [
                "a08d75f82003a318"
            ]
        ]
    },
    {
        "id": "a08d75f82003a318",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (25,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "9f200b4f24aed582",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/tactil",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 2280,
        "wires": [
            [
                "4f6b28c678fb2358"
            ]
        ]
    },
    {
        "id": "4f6b28c678fb2358",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (26,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "b898734b8c9fce7c",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/redswitch",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 2340,
        "wires": [
            [
                "216ecadc66b4a356"
            ]
        ]
    },
    {
        "id": "216ecadc66b4a356",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (27,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "a6c63bb61c8328f1",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/tactilmetal",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 2400,
        "wires": [
            [
                "cfe6e6cdecc847a2"
            ]
        ]
    },
    {
        "id": "cfe6e6cdecc847a2",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (28,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "b7e2d4b8d8b898c7",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (29,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "495614286d3d0a67",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/temperaturaanal",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1260,
        "y": 2460,
        "wires": [
            [
                "b7e2d4b8d8b898c7"
            ]
        ]
    },
    {
        "id": "5e7092aa12674747",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (30,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "bbfe74f0e8ce135c",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/movimiento",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 2580,
        "wires": [
            [
                "5e7092aa12674747"
            ]
        ]
    },
    {
        "id": "5bc9406b97ddae1b",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (31,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "5400d646dcac1fa6",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/encoder",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 2620,
        "wires": [
            [
                "5bc9406b97ddae1b"
            ]
        ]
    },
    {
        "id": "770db5f5eb8fee98",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (32,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "fd0638213f11861f",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/mq2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 2660,
        "wires": [
            [
                "770db5f5eb8fee98"
            ]
        ]
    },
    {
        "id": "24e4f20630f8e505",
        "type": "postgresql",
        "z": "f9b6d46158a48420",
        "name": "INSERT sensors",
        "query": "INSERT INTO sensor_details (sensor_id, user_id, value) VALUES (33,1,'{{{msg.payload}}}');\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1490,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "c6a0260a87fbddce",
        "type": "mqtt in",
        "z": "f9b6d46158a48420",
        "name": "",
        "topic": "sensor/inclinacion",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39e7b33c8c70f5ac",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1250,
        "y": 2720,
        "wires": [
            [
                "24e4f20630f8e505"
            ]
        ]
    },
    {
        "id": "3cd515a78cadaa56",
        "type": "postgreSQLConfig",
        "name": "aiot",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "aiot",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "utng",
        "userFieldType": "str",
        "password": "1234",
        "passwordFieldType": "str"
    },
    {
        "id": "39e7b33c8c70f5ac",
        "type": "mqtt-broker",
        "name": "actuator/buzzeractivo",
        "broker": "192.168.153.135",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]